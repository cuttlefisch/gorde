:PROPERTIES:
:ID:       9ebc0e58-4484-4e59-85c1-e4f66fb27cc2
:hash:     6f40a4b292110728f2be1403ed770b387809fd5c
:last-modified: 12/28/22
:END:
#+title: Quickstart


* Generate Initial Configuration
Initial configuration must:
 * Set & activate local variables to prevent any impact on other Org Roam instances
 *


** Initialize & Reset the environment
Resetting the environment consists of removing any org files in this dir, then
repopulating the base files by tangling this file.

To reset, remove the ~:noeval~ header arg, then execute the block.
#+begin_src bash :dir . :noeval
rm -f *.test
#+end_src


** The README.org file
Here we generate the project README, demonstrating some formatting used in further
templates, namely escaping [[https://orgmode.org/manual/Literal-Examples.html#DOCF117][special sequences]] with a leading comma, such as the ~,* Good
Org...~ heading.

#+begin_src org :tangle README.org
,* Good Org Roam Development Environment
The ~GORDE~ is a Good Org Roam Development Environment providing a simple set of Org Roam
templates to work with.

The Goal of this repo is to provide a stable set of realistic Org Roam instances that
facilitate safer & more efficient development of Org Roam Extensions.
#+end_src


#+begin_src elisp :tangle .dir-locals.el
((org-mode . ((eval . (setq-local project-root-path
                        ;; Find out what dir we're in, and ensure we have
                        ;; it in string format.
                        (file-name-directory
                         (let ((curdir (dir-locals-find-file "./")))
                                (if (stringp curdir)
                                    curdir
                                   (car curdir))))))

          ;; These two are important, if not set correctly your REAL
          ;; org roam instance may be modified.
          (eval . (setq-local org-roam-directory project-root-path))
          (eval . (setq-local org-roam-db-location (concat project-root-path ".org-roam.db")))

          ;; We load in some extra languages for convenience
          (eval . (org-babel-do-load-languages 'org-babel-load-languages
                               '((sql . t)
                                 (lisp . t)
                                 (nix . t)
                                 (bash . t)
                                 (sh . t)
                                 (sqlite . t)
                                 (org . t)
                                 (python . t)
                                 (R . t)
                                 (shell . t)
                                 (emacs-lisp . t)))))))
#+end_src

** Debugger.org
To simplify the process of reading some common values sought during development, the
Debugger.org file is regularly updated with stats about this development Org Roam
instances.

Properties are human readable, and ephemeral.
#+begin_src elisp
(defun update-debug-dashboard (&optional event debug-dash-file)
  "Update the DEBUG-DASH-FIlE file when EVENT received."
  (message "Type of Event:\t%S" (type-of event))
  (message "Event:\t%S" event)
  ; Find org roam file
  ; For each debugging property
  ; find the appropriate heading
  ; insert new data
  ; save & close file
                )
#+end_src
